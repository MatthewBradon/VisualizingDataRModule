#Setting include to FALSE on this chunk so that it doesn't appear in the output
# Load necessary libraries
options(repos = c(CRAN = "https://cloud.r-project.org"))
if (!require("tidyverse")) install.packages("tidyverse", dependencies = TRUE)
if (!require("cowplot")) install.packages("cowplot", dependencies = TRUE)
if (!require("plotly")) install.packages("plotly", dependencies = TRUE)
if (!require("ggcorrplot")) install.packages("ggcorrplot", dependencies = TRUE)
if (!require("pastecs")) install.packages("pastecs", dependencies = TRUE)
if (!require("PerformanceAnalytics")) install.packages("PerformanceAnalytics", dependencies = TRUE)
if (!require("patchwork")) install.packages("patchwork", dependencies = TRUE)
if (!require("Hmisc")) install.packages("Hmisc", dependencies = TRUE)
if (!require("corrplot")) install.packages("corrplot", dependencies = TRUE)
if(!require("mgcv")) install.packages("mgcv", dependencies = TRUE)
library(tidyverse) # Tools for wrangling data
library(cowplot) # For organising plots into a grid
library(patchwork) # For matrix layout
library(plotly) # For Animating plots
library(ggcorrplot) # For Correlation Heatmaps
library(corrplot) # For correlation matrices
library(PerformanceAnalytics)# For standardised skewness and kurtosis
library(Hmisc) # For generating correlation
datapath <- file.path('survey.dat')
#Load it into the dataframe called survey (.dat file so use read.Table)
survey <- read.table(datapath)
#Setting the column names to be that used in the dataset but in lowercase to make life a bit easier
colnames(survey) <- tolower(colnames(survey))
# Omit Null values
survey <- na.omit(survey)
# Optimism Histogram
toptim_hist <- ggplot(survey, aes(x = toptim)) +
geom_histogram(aes(y = after_stat(density)), binwidth = 1, alpha = 0.4, position = "identity", fill = "red") +
geom_density(alpha = 0.7, adjust = 1.2) +
labs(title = "Optimism", x = "Optimism", y = "Density") +
theme_minimal() +
theme(
plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8),
legend.text = element_text(size = 8),
plot.margin = margin(5, 10, 5, 5)
)
# Positive Affect Histogram
tposaff_hist <- ggplot(survey, aes(x = tposaff)) +
geom_histogram(aes(y = after_stat(density)), binwidth = 1, alpha = 0.4, position = "identity", fill = "blue") +
geom_density(alpha = 0.7, adjust = 1.2) +
labs(title = "Positive Affect", x = "Positive Affect", y = "Density") +
theme_minimal() +
theme(
plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8),
legend.text = element_text(size = 8),
plot.margin = margin(5, 10, 5, 5)
)
# Negative Affect Histogram
tnegaff_hist <- ggplot(survey, aes(x = tnegaff)) +
geom_histogram(aes(y = after_stat(density)), binwidth = 1, alpha = 0.4, position = "identity", fill = "darkgreen") +
geom_density(alpha = 0.7, adjust = 1.2) +
labs(title = "Negative Affect", x = "Negative Affect", y = "Density") +
theme_minimal() +
theme(
plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8),
legend.text = element_text(size = 8),
plot.margin = margin(5, 10, 5, 5)
)
# Mastery Histogram
tmast_hist <- ggplot(survey, aes(x = tmast)) +
geom_histogram(aes(y = after_stat(density)), binwidth = 1, alpha = 0.4, position = "identity", fill = "purple") +
geom_density(alpha = 0.7, adjust = 1.2) +
labs(title = "Mastery", x = "Mastery", y = "Density") +
theme_minimal() +
theme(
plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8),
legend.text = element_text(size = 8),
plot.margin = margin(5, 10, 5, 5)
)
# Arrange the plots using cowplot
histogram_grid <- plot_grid(toptim_hist, tposaff_hist, tnegaff_hist, tmast_hist, nrow = 2, ncol = 2)
# Display the grid
print(histogram_grid)
smoke_bar <- ggplot(survey, aes(x = smoke, fill = as.factor(smoke))) +  # Color by category
geom_bar() +
labs(title = "Bar Chart of Smoking Status", x = "Smoking Status", y = "Count", fill = "Smoking Status") +
theme_minimal() +
theme(
plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8),
legend.text = element_text(size = 8),
plot.margin = margin(5, 10, 5, 5)
)
print(smoke_bar)
# Box plot Comparing optimism between smokers and non smokers
smoke_box <- ggplot(survey, aes(x = smoke, y = toptim, fill = smoke)) +
geom_boxplot() +
labs(title = "Boxplot of Optimism by Smoking Status", x = "Smoking Status", y = "Optimism", fill = "Smoking Status") +
theme_minimal() +
theme(
plot.title = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 8),
legend.text = element_text(size = 8),
plot.margin = margin(5, 10, 5, 5)
)
print(smoke_box)
for (var in c("tposaff", "tnegaff", "tmast")) {
var_data <- survey %>% select(toptim, !!sym(var)) %>%
rename(
Optimism = toptim,
Variable = !!sym(var)
)
if (nrow(var_data) > 1) {
cor_result <- cor.test(var_data$Optimism, var_data$Variable)
cat(paste("\nVariable:", var, "\n"))
print(data.frame(
Variable = var,
Correlation = cor_result$estimate,
P_value = cor_result$p.value
))
}
}
p1 <- ggplot(survey, aes(x = tposaff, y = toptim)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Optimism vs. Positive Affect", x = "Positive Affect", y = "Optimism") +
theme_minimal()
p2 <- ggplot(survey, aes(x = tnegaff, y = toptim)) +
geom_point(alpha = 0.5, color = "green") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Optimism vs. Negative Affect", x = "Negative Affect", y = "Optimism") +
theme_minimal()
p3 <- ggplot(survey, aes(x = tmast, y = toptim)) +
geom_point(alpha = 0.5, color = "purple") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Optimism vs. Mastery", x = "Mastery", y = "Optimism") +
theme_minimal()
# Combine plots using patchwork
scatter_plots <-  (p1 / p2 / p3) +
patchwork::plot_annotation(title = "Scatterplots of Optimism and Psychological Factors", theme = theme(plot.title = element_text(hjust = 0.5)))
print(scatter_plots)
# Select only relevant columns
selected_data <- survey %>% select(toptim, tposaff, tnegaff, tmast)
# Rename for better labels
colnames(selected_data) <- c("Optimism", "Positive Affect", "Negative Affect", "Mastery")
# Compute correlation matrix
corr_matrix <- cor(selected_data, use = "complete.obs")
# Generate heatmap
p <- ggcorrplot(corr_matrix,
type = "lower",
lab = TRUE,
lab_size = 3,
colors = c("#6D9EC1", "white", "#E46726"),
title = "Correlation Heatmap of Psychological Factors",
ggtheme = theme_minimal()) +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
print(p)
