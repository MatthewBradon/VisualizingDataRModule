---
title: "CMPU4091 Visualizing Data"
sub-title: "Bike Rental Lab 5"
format:
  html:
    code-fold: true
    self-contained: true
    toc: true
editor: visual
---

```{r setup-libraries}
options(repos = c(CRAN = "https://cloud.r-project.org"))

# Function to quietly install and load packages
quiet_library <- function(pkg) {
  suppressMessages(suppressWarnings({
    if (!requireNamespace(pkg, quietly = TRUE)) {
      install.packages(pkg, quiet = TRUE) # Install without messages
    }
    library(pkg, character.only = TRUE) # Load silently
  }))
}

# Install & Load Packages Silently
quiet_library("ggplot2")
quiet_library("plotly")
quiet_library("gapminder") #An excerpt of the data available at Gapminder.org. For each of 142 countries, the package provides values for life expectancy, GDP per capita, and population, every five years, from 1952 to 2007.
quiet_library("ggstream")
quiet_library("lubridate")
quiet_library("tidyverse")

```

```{r}
# Load the dataset
bike_data <- read.csv("day.csv")

# Convert date column to Date type
bike_data$dteday <- as.Date(bike_data$dteday)

# Inspect the dataset
head(bike_data)
summary(bike_data)
```



## Charts

### Step 1: Simple Bar Chart



```{r}
# Change the values of the season column
bike_data$season <- factor(bike_data$season, 
                           levels = c(1, 2, 3, 4), 
                           labels = c("Spring", "Summer", "Fall", "Winter"))

# Create a text label with more details
bike_data$tooltip_text <- paste("Season:", bike_data$season,
                                "<br>Total Rentals:", bike_data$cnt)

# Create the bar chart
p <- ggplot(bike_data, aes(x = factor(season), y = cnt, fill = factor(season), text = tooltip_text)) +
  geom_bar(stat = "identity") +
  labs(title = "Total Bike Rentals Across Different Seasons", x = "Season", y = "Total Rentals") +
  theme_minimal()

# Convert to interactive plot with tooltips
ggplotly(p, tooltip = "text")

```



### Step 2: Divergent Bar Chart



```{r}
# Calculate deviation from average
bike_deviation <- bike_data %>%
  mutate(mean_cnt = mean(cnt), deviation = cnt - mean_cnt)

p <- ggplot(bike_deviation, aes(x = dteday, y = deviation, fill = deviation > 0)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("red", "blue")) +
  labs(title = "Divergent Bar Chart: Rentals Above/Below Average", x = "Date", y = "Deviation from Average") +
  theme_minimal()

# Make it interactive
ggplotly(p)

```



### Step 3: Simple Time Series



```{r}
# Ensure the data is sorted by date
bike_data <- bike_data %>% arrange(dteday)

# Create the line chart
p <- ggplot(bike_data, aes(x = dteday, y = cnt, group = 1, text = paste("Date:", dteday, "<br>Total Rentals:", cnt))) +
  geom_point(color = "black", size = 1) +
  labs(title = "Bike Rentals Over Time", x = "Date", y = "Total Rentals") +
  theme_minimal()

# Make it interactive
ggplotly(p, tooltip = "text")

```



### Step 4: Multi Time Series



```{r}
bike_long <- bike_data %>%
  select(dteday, casual, registered, yr) %>%
  pivot_longer(cols = c(casual, registered), names_to = "user_type", values_to = "count")

p <- ggplot(bike_long, aes(x = dteday, y = count, color = user_type, frame = yr, text = paste("Date: ", dteday, "<br>User Type: ", user_type, "<br>Count: ", count))) +
  geom_point(size = 1) +
  scale_color_manual(values = c("registered" = "blue", "casual" = "red")) +
  labs(title = "Casual vs Registered Users Over Time", x = "Date", y = "Count") +
  theme_minimal()

# Make it interactive and animated
ggplotly(p, tooltip = "text") %>% animation_opts(frame = 1000, easing = "linear")
```



### Step 5: Facet Grid



```{r}
p <- ggplot(bike_data, aes(x = dteday, y = cnt, color = factor(season))) +
  geom_line() +
  facet_wrap(~ season, scales = "free_y") +
  labs(title = "Bike Rentals Trends by Season", x = "Date", y = "Total Rentals") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Make it interactive
ggplotly(p)

# Using facet_grid as an alternative
p_grid <- ggplot(bike_data, aes(x = dteday, y = cnt, color = factor(season))) +
  geom_line() +
  facet_grid(. ~ season, scales = "free_y") +
  labs(title = "Bike Rentals Trends by Season (Grid)", x = "Date", y = "Total Rentals") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

# Make it interactive
ggplotly(p_grid)
```



### Step 6: Streamgraph



```{r}
bike_stream <- bike_data %>%
  select(dteday, casual, registered) %>%
  pivot_longer(cols = c(casual, registered), names_to = "user_type", values_to = "count")

p <- ggplot(bike_stream, aes(x = dteday, y = count, fill = user_type)) +
  geom_stream(type = "proportional") +
  labs(title = "Evolution of User Types Over Time", x = "Date", y = "Count") +
  theme_minimal()

# Make it interactive
ggplotly(p)
```
